apiVersion: v1
kind: Namespace
metadata:
  name: ns-kuard2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuard2
  namespace: ns-kuard2
spec:
  selector:
    matchLabels:
      app: kuard2
  replicas: 1
  template:
    metadata:
      labels:
        app: kuard2
    spec:
      containers:
      - image: gcr.io/kuar-demo/kuard-amd64:1
        imagePullPolicy: Always
        name: kuard2
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 600
          timeoutSeconds: 3
          failureThreshold: 1
        readinessProbe:
          httpGet:
            path: /healthy
            port: 8080
          periodSeconds: 10
          initialDelaySeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kuard2
  namespace: ns-kuard2
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: kuard2
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kuard2
  namespace: ns-kuard2
  annotations:
    kubernetes.io/ingress.class: "nginx"    
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  #tls:
  #- hosts:
  #  - myprettyprettytest112233.openode.io
  #  secretName: quickstart-example-tls23
  rules:
  - host: myprettyprettytest112233.openode.io
    http:
      paths:
      - path: /
        backend:
          serviceName: kuard2
          servicePort: 80
