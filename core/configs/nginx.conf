user www-data;
worker_processes auto;
error_log  /var/log/nginx/error.log error;
pid /run/nginx.pid;

events {
  worker_connections  65536;

  # /etc/systemd/system.conf
  # DefaultLimitNOFILE=65536
}

worker_rlimit_nofile 32768;

# /etc/security/limits.conf:
# * soft nofile 32768
# * hard nofile 32768
# root soft nofile 32768
# root hard nofile 32768

# /etc/pam.d/common-session:
# session required pam_limits.so

# /etc/pam.d/common-session-noninteractive:
# session required pam_limits.so

http {
  client_max_body_size 1000M;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - "$host" "$request" $body_bytes_sent';

  access_log  /var/log/nginx/access.log  main buffer=320K;

  server_tokens off;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  gzip  on;

  #include /etc/nginx/conf.d/*.conf;
  map_hash_max_size 262144;
  map_hash_bucket_size 262144;
  server_names_hash_bucket_size 262144;

  server {
    listen 80 default_server;
    listen 443 ssl default_server;
    ssl_certificate /var/www/certs/openode.io.crt;
    ssl_certificate_key /var/www/certs/privatekey.key;
    server_name _;

    return 404;
  }

  ### openode-www
  upstream openodewww {
    server 127.0.0.1:3001;
  }

  server {
    listen       80;
    server_name  openode.io www.openode.io;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name  openode.io;
    underscores_in_headers on;

    return 301 https://www.openode.io$request_uri;
  }

  server {
    server_name  www.openode.io;
    underscores_in_headers on;

    listen 443 ssl http2;
    ssl_certificate /var/www/certs/openode.io.crt;
    ssl_certificate_key /var/www/certs/privatekey.key;

    location / {
      proxy_pass http://openodewww;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header        X-Forwarded-For   $remote_addr;
      proxy_set_header        X-Real-IP         $remote_addr;
      proxy_set_header        Host              $host;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_read_timeout 900;
    }
  }

  ### openode-api
  upstream openodeapi {
    server 127.0.0.1:3000;
  }

  server {
    listen       80;
    server_name  api.openode.io;
    return 301 https://$host$request_uri;
  }

  server {
    server_name  api.openode.io;
    underscores_in_headers on;

    listen 443 ssl http2;
    ssl_certificate /var/www/certs/openode.io.crt;
    ssl_certificate_key /var/www/certs/privatekey.key;

    location ^~ /socket.io/ {
        return 404;
    }

    location / {
      proxy_pass http://openodeapi;
      add_header Access-Control-Allow-Origin *;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header        X-Forwarded-For   $remote_addr;
      proxy_set_header        X-Real-IP         $remote_addr;
      proxy_set_header        Host              $host;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_read_timeout 900;
    }
  }
}
